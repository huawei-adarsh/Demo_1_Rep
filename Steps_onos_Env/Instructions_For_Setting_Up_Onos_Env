1. Put latest master onos and onos-yang-tools in home (/home/root1/)
2. compile the onos-yang-tools
3. on onos
    /home/root1/onos/tools/dev/bin
    run patch-yang-libs


NOTE :- make sure all YRT jar update has snapshot version 1.12-SNAPSHOT other then this there should not be any version of YRT
4. apps/config/pom.xml

    add dependency for onos-yang-model
    <dependency>
        <groupId>org.onosproject</groupId>
        <artifactId>onos-yang-model</artifactId>
        <version>1.12-SNAPSHOT</version>
    </dependency>

5. apps/pom.xml
    add yang demo in apps
    <module>yangdemo</module>

6. apps/restconf/restconfmgr/BUCK
    update with the given buck file
7. apps/restconf/restconfmgr/pom.xml

    add dependency for onos-yang-runtime
    <dependency>
        <groupId>org.onosproject</groupId>
        <artifactId>onos-yang-runtime</artifactId>
        <version>1.12-SNAPSHOT</version>
    </dependency>

8. apps/restconf/restconfmgr/src/main/java/org/onosproject/restconf/restconfmanager/RestconfManager.java
     at line number 83 make @Component(immediate = true)
9. apps/restconf/utils/pom.xml

    <dependency>
        <groupId>org.onosproject</groupId>
        <artifactId>onos-yang-runtime</artifactId>
        <version>1.12-SNAPSHOT</version>
    </dependency>
    <dependency>
        <groupId>org.onosproject</groupId>
        <artifactId>onos-yang-model</artifactId>
        <version>1.12-SNAPSHOT</version>
    </dependency>
10. apps/yang/pom.xml

    in properties add update yang version to 1.12-SNAPSHOT
    <properties>
        <onos.app.name>org.onosproject.yang</onos.app.name>
        <onos.app.category>Utility</onos.app.category>
        <onos.app.title>Onos Yang Extension</onos.app.title>
        <onos.app.url>http://onosproject.org</onos.app.url>
        <onos.app.readme>Onos Yang Extension.</onos.app.readme>
        <yang.version>1.12-SNAPSHOT</yang.version>
    </properties>

11. lib/BUCK
     make sure all YRT jar update has snapshot version 1.12-SNAPSHOT

12. modules.defs
    add yang demo app in apps and then 
    '//apps/yangdemo:onos-apps-yangdemo-oar'

13. protocols/restconf/server/restconfmgr/src/main/java/org/onosproject/protocol/restconf/server/restconfmanager/RestconfBrokerImpl.java
    make @Component(immediate = true)

14. protocols/restconf/server/restconfmgr/src/main/java/org/onosproject/protocol/restconf/server/restconfmanager/RestconfManager.java
    make @Component(immediate = true)
    
15. extract yangdemo.tar to apps/
    cd ~/onos/apps/yangdemo/yangmodel
    and do 
    mci
    (if you found there is error in your IDE regarding to ClassName, retype it, the IDE should provide type suggestion, use that one)

16. After this Do Buck build onos.

17. Once build is complete do ok clean debug.

18. Open CLI by using onos localhost

19. Activate required apps by using below commands.
    app activate org.onosproject.yang
    app activate org.onosproject.yangdemo
    app activate org.onosproject.yms
    app activate org.onosproject.config
    app activate org.onosproject.restconf
    app activate org.onosproject.protocols.restconfserver

20. Place the restconfConfig.json and add this path in the below curl command and give it on the terminal.
    curl -X POST -H "content-type:application/json" http://localhost:8181/onos/v1/network/configuration -d @/home/root1/Henry_app_active_command/restconfConfig.json --user onos:rocks

21. Send the l3vpn json via postman using the URI and Body present.
